{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA,kBAAkB;AAEwB;;;;ICyDvC,8EACC;IAAA,wEAAO;IAAA,wEAAa;IAAA,4DAAQ;IAE5B,uEAED;IAKA,4DAAU;;;IAP4C,0DAAkB;IAAlB,kFAAkB;;AD3DnD;AAExB,MAQM,YAAY;IARlB;QAUC,8DAA8D;QAC9D,4CAA4C;QACrC,UAAK,GAAG,IAAI,CAAC;QACb,aAAQ,GAAG,EAAE,CAAC,CAAC,qBAAqB;QACpC,mBAAc,GAAG,CAAC,CAAC;QAEnB,YAAO,GAAG;YAChB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,KAAK;SACd,CAAC;KA2EF;IAzEO,uBAAuB;QAE7B,OAAO,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACzG,CAAC;IAEM,aAAa;QAEnB,MAAM,OAAO,GAAG,YAAY,CAAC;QAC7B,MAAM,OAAO,GAAG,4BAA4B,CAAC;QAC7C,MAAM,OAAO,GAAG,YAAY,CAAC;QAE7B,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAE3B,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACzB,UAAU,IAAI,OAAO,CAAC;SACtB;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACzB,UAAU,IAAI,OAAO,CAAC;SACtB;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACzB,UAAU,IAAI,OAAO,CAAC;SACtB;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;YAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,MAAM,CAAE,CAAC;YAC9D,iBAAiB,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC;IACnC,CAAC;IAEM,WAAW;QAEjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,oFAAoF;IAC7E,aAAa,CAAC,EAAS;QAE7B,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,8DAA8D;QAC/E,MAAM,SAAS,GAAqB,EAAE,CAAC,MAA0B,CAAC;QAElE,MAAM,WAAW,GAAW,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAEtD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;YACxB,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACjC;IACF,CAAC;IAED,gFAAgF;IAChF,0CAA0C;IAC1C,gFAAgF;IACzE,eAAe;QAErB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;IAC9C,CAAC;IAEM,eAAe,CAAC,MAAmB;QAEzC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,2CAA2C;QAChE,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;IAC9C,CAAC;IAEM,eAAe,CAAC,EAAS;QAE/B,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,2CAA2C;QAC5D,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;IAC9C,CAAC;;wEAtFI,YAAY;4FAAZ,YAAY;QCXlB,yEAEC;QAAA,yEACC;QAAA,yEAEC;QAAA,wEAAoC;QAAA,6EAAkB;QAAA,4DAAK;QAE3D,6EACC;QAAA,wEAAO;QAAA,wEACN;QACA,2EAEA;QAFmB,yIAAS,yBAAqB,IAAC;QAAlD,4DAEA;QAKD,4DAAQ;QACT,4DAAU;QAEV,6EACC;QAAA,0EACC;QAAA,4EACC;QACA,4EACA;QADuB,sIAAU,qBAAiB,IAAC;QAAnD,4DACA;QAAA,yEACD;QAAA,4DAAQ;QACT,4DAAM;QACP,4DAAU;QAEV,8EACC;QAAA,0EACC;QAAA,4EACC;QACA,4EACA;QADuB,4IAAU,kCAA+B,IAAC;QAAjE,4DACA;QAAA,yEACD;QAAA,4DAAQ;QACT,4DAAM;QACP,4DAAU;QAEV,8EACC;QAAA,0EACC;QAAA,4EACC;QAAA,4EACA;QADuB,4IAAU,2BAAuB,IAAC;QAAzD,4DACA;QAAA,yEACD;QAAA,4DAAQ;QACT,4DAAM;QACP,4DAAU;QAMV,6EACwC;QADI,qIAAS,mBAAe,IAAC;QAC7B,qEAAS;QAAA,4DAAS;QAG1D,mHAUU;QAEX,4DAAM;QACP,4DAAM;QAEP,4DAAM;;QAlBF,2DAAsC;QAAtC,mGAAsC;QAGjB,0DAAqB;QAArB,qFAAqB;;6FD9CxC,YAAY;cARjB,uDAAS;eACT;gBACC,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACnC;;;;;;;;;;;;;;AEVF;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;;AAYxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBARlB,2DAAY,aAGZ,uEAAa;6FAKJ,SAAS;cAVrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// Component Class\n\nimport { Component } from '@angular/core';\nexport { AppComponent };\n\n@Component(\n\t{\n\t\tselector: 'app-root',\n\t\ttemplateUrl: './app.component.html',\n\t\tstyleUrls: ['./app.component.scss']\n\t})\n\n\nclass AppComponent\n{\n\t// All properties and methods within this class must be public\n\t// (not static, not protected, not private).\n\tpublic title = \"pw\";\n\tpublic password = \"\"; // generated password\n\tpublic passwordLength = 0;\n\n\tpublic options = {\n\t\tletters: false,\n\t\tnumbers: false,\n\t\tsymbols: false\n\t};\n\n\tpublic ButtonDisabledCondition(): boolean\n\t{\n\t\treturn !(this.passwordLength && (this.options.letters || this.options.numbers || this.options.symbols));\n\t}\n\n\tpublic OnButtonClick()\n\t{\n\t\tconst numbers = \"0123456789\";\n\t\tconst letters = \"abcdefghijklmnopqrstuvwxyz\";\n\t\tconst symbols = \"!@#$%^&*()\";\n\n\t\tlet validChars = \"\";\n\t\tlet generatedPassword = \"\";\n\n\t\tif (this.options.letters) {\n\t\t\tvalidChars += letters;\n\t\t}\n\n\t\tif (this.options.numbers) {\n\t\t\tvalidChars += numbers;\n\t\t}\n\n\t\tif (this.options.symbols) {\n\t\t\tvalidChars += symbols;\n\t\t}\n\n\t\tfor (let i = 0; i < this.passwordLength; i++) {\n\t\t\tconst index = Math.floor( Math.random() * validChars.length );\n\t\t\tgeneratedPassword += validChars[index];\n\t\t}\n\n\t\tthis.password = generatedPassword;\n\t}\n\n\tpublic GetPassword(): string\n\t{\n\t\treturn this.password;\n\t}\n\n\t// public OnLengthInput(ev: InputEvent): void  // both Event or InputEvent work here\n\tpublic OnLengthInput(ev: Event): void\n\t{\n\t\tconsole.dir(ev); // = InputEvent (no matter if 'ev' is 'Event' or 'InputEvent')\n\t\tconst inputElem: HTMLInputElement = ev.target as HTMLInputElement;\n\n\t\tconst parsedValue: number = parseInt(inputElem.value);\n\n\t\tif (!isNaN(parsedValue)) {\n\t\t\tthis.passwordLength = parsedValue;\n\t\t\tconsole.log(this.passwordLength);\n\t\t}\n\t}\n\n\t// It is _not_ possible to define an Event parameter like on the following line:\n\t// public OnLettersChange(ev: Event): void\n\t// if no parameter has been passed to the method! (error: \"Expected 1 argument\")\n\tpublic OnLettersChange(): void\n\t{\n\t\tconsole.log(\"OnLettersChange()\");\n\t\tthis.options.letters = !this.options.letters;\n\t}\n\n\tpublic OnNumbersChange(target: EventTarget): void\n\t{\n\t\tconsole.dir(target); // not used, this is just for demo purposes\n\t\tthis.options.numbers = !this.options.numbers;\n\t}\n\n\tpublic OnSymbolsChange(ev: Event): void\n\t{\n\t\tconsole.dir(ev); // not used, this is just for demo purposes\n\t\tthis.options.symbols = !this.options.symbols;\n\t}\n}\n","<!-- Component Template -->\n\n<div class=\"container\">\n\n\t<div class=\"columns is-centered\">\n\t\t<div class=\"box column is-one-third\">\n\n\t\t\t<h1 class=\"title has-text-centered\">Password Generator</h1>\n\n\t\t\t<section class=\"field\">\n\t\t\t\t<label>Enter length\n\t\t\t\t\t<!-- TypeScript code here gets evaluated by Angular! So it is possible to pass parameters directly. To pass the Event object as parameter there is a reserved word named '$event' in Angular. -->\n\t\t\t\t\t<input type=\"text\" (input)=\"OnLengthInput($event)\" />\n\n\t\t\t\t\t<!--\n\t\t\t\t\tWhen using TS strict mode using $event.target.value would give an error:\n\t\t\t\t\tProperty 'value' does not exist on type 'EventTarget' (although it _does_ exist), but $event.target would be OK (see OnNumbersChange)\n\t\t\t\t\t  <input type=\"text\" (input)=\"OnLengthInput($event.target.value)\" />\n\t\t\t\t\t-->\n\t\t\t\t</label>\n\t\t\t</section>\n\n\t\t\t<section class=\"field\">\n\t\t\t\t<div class=\"control\">\n\t\t\t\t\t<label class=\"checkbox\">\n\t\t\t\t\t\t<!-- Notice that I don't pass any parameter here. To be able to use the 'Event' object later in the method the special '$event' argument/parameter is needed! Else an error will occur (Expected 1 argument). -->\n\t\t\t\t\t\t<input type=\"checkbox\" (change)=\"OnLettersChange()\" />\n\t\t\t\t\t\tUse Letters\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"field\">\n\t\t\t\t<div class=\"control\">\n\t\t\t\t\t<label class=\"checkbox\">\n\t\t\t\t\t\t<!-- Following code is not good practice. \"!\" is needed to avoid error: Argument of type 'EventTarget | null' is not assignable to parameter of type 'EventTarget'. -->\n\t\t\t\t\t\t<input type=\"checkbox\" (change)=\"OnNumbersChange($event.target!)\" />\n\t\t\t\t\t\tUse Numbers\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"field\">\n\t\t\t\t<div class=\"control\">\n\t\t\t\t\t<label class=\"checkbox\">\n\t\t\t\t\t\t<input type=\"checkbox\" (change)=\"OnSymbolsChange($event)\" />\n\t\t\t\t\t\tUse Symbols\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</section>\n\n<!-- Event binding syntax -->\n<!-- <button (click)=\"ClickedEventHandler()\"\n[disabled]=\"!(passwordLength && (options.letters || options.numbers || options.symbols))\"\t>Generate!</button> -->\n\n\t\t\t<button class=\"button is-link is-fullwidth\" (click)=\"OnButtonClick()\"\n\t\t\t\t[disabled]=\"ButtonDisabledCondition()\">Generate!</button>\n\n\t\t\t<!-- *ngIf is a 'structural directive', changing the structure of HTML -->\n\t\t\t<section class=\"box\" *ngIf=\"password !== ''\">\n\t\t\t\t<label>Your Password</label>\n\t\t\t\t<!-- Property binding syntax -->\n\t\t\t\t<input class=\"input\" type=\"text\" readonly=\"readonly\" [value]=\"password\" />\n\n\t\t\t<!-- MORE POSSIBILITES TO ACHIEVE SAME BEHAVIOR:\n\t\t\t<input type=\"text\" readonly=\"readonly\" [value]=\"GetPassword()\" />\n\t\t\t<input type=\"text\" readonly=\"readonly\" value=\"{{ password }}\" />\n\t\t\t<input type=\"text\" readonly=\"readonly\" value=\"{{ GetPassword() }}\" />\n\t\t\t-->\n\t\t\t</section>\n\n\t\t</div>\n\t</div>\n\n</div>\n\n\n<!-- Interpolation syntax:\n\n{{ password }}\n\n-->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}